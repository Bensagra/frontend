{"version":3,"sources":["redux/auth/selectors.js","auth/cookie.js","auth/auth.service.js","request/errorHandler.js","request/successHandler.js","router/PublicRoute.jsx","components/PageLoader/index.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crud/reducer.js","redux/search/types.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","app/index.jsx","hooks/useNetwork/index.jsx","serviceWorker.jsx","index.jsx","config/serverApiConfig.js","redux/crud/types.js","redux/auth/types.js","redux/storePersist.js","request/codeMessage.js","auth/index.js","utils/history.jsx"],"names":["authSelect","state","auth","selectAuth","createSelector","selectCurrentAdmin","current","isLoggedIn","getCookie","cookieName","result","window","localStorage","getItem","JSON","parse","login","async","response","axios","post","API_BASE_URL","concat","Date","getTime","loginAdminData","token","set","data","successHandler","error","errorHandler","logout","headersInstance","ACCESS_TOKEN_NAME","axiosInstance","create","baseURL","timeout","headers","_objectSpread","remove","storePersist","clear","location","href","get","cookieValue","setItem","stringify","removeItem","emptyResult","arguments","length","undefined","status","errorText","message","codeMessage","notification","config","duration","description","jwtExpired","history","push","success","url","PublicRoute","_ref","component","Component","rest","_objectWithoutProperties","_excluded","_jsx","Route","render","props","authService","Redirect","to","motion","div","initial","x","animate","exit","scale","children","PageLoader","className","Spin","size","Login","lazy","NotFound","AuthRouter","useLocation","Suspense","fallback","AnimatePresence","exitBeforeEnter","_jsxs","Switch","path","exact","pathname","PrivateRoute","type","damping","stiffness","transition","y","opacity","Admin","Customer","SelectCustomer","Lead","Product","Logout","UploadFile","AppRouter","console","log","Sider","Layout","SubMenu","Menu","Navigation","collapsed","setCollapsed","useState","isRootUser","useSelector","_Fragment","collapsible","onCollapse","style","zIndex","theme","defaultSelectedKeys","mode","onClick","e","key","Item","icon","DashboardOutlined","Link","UserOutlined","LogoutOutlined","Router","useEffect","minHeight","INITIAL_STATE","loading","authReducer","action","actionTypes","payload","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","pagination","pageSize","total","update","delete","read","search","crudReducer","keyState","INITIAL_REF_STATE","selected","searchReducer","newState","map","refKey","appReducer","combineReducers","crud","rootReducer","createLogger","middleware","thunk","configStore","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","store","createStore","App","isOnline","isNetwork","setNetwork","navigator","onLine","useNetwork","RouterHistory","Provider","Result","title","subTitle","extra","Button","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","process","REACT_APP_DEV_REMOTE","BACKEND_BASE_URL","RESET_STATE","CURRENT_ITEM","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","CURRENT_ACTION","RESET_ACTION","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","getAll","createBrowserHistory"],"mappings":"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","file":"static/js/main.e6a99037.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nconst authSelect = (state) => state.auth;\n\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\nexport const selectCurrentAdmin = createSelector(\n  [authSelect],\n  (auth) => auth.current\n);\n\nexport const isLoggedIn = createSelector(\n  [authSelect],\n  (auth) => auth.isLoggedIn\n);\n","// export function getCookie(cookieName) {\n//   let name = cookieName + \"=\";\n//   let ca = document.cookie.split(\";\");\n//   for (let i = 0; i < ca.length; i++) {\n//     let c = ca[i];\n//     while (c.charAt(0)===\" \") {\n//       c = c.substring(1);\n//     }\n//     if (c.indexOf(name)===0) {\n//       return c.substring(name.length, c.length);\n//     }\n//   }\n//   return \"\";\n// }\n\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\n//   let d = new Date();\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n//   let expires = \"expires=\" + d.toUTCString();\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\n// }\n\n// export function deleteCookie(cookieName) {\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\n//   return true;\n// }\n\nexport function setCookie(cookieName, cookieValue) {\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\n}\nexport function getCookie(cookieName) {\n  const result = window.localStorage.getItem(cookieName);\n  return JSON.parse(result);\n}\nexport function deleteCookie(cookieName) {\n  window.localStorage.removeItem(cookieName);\n  return true;\n}\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\n\nimport axios from \"axios\";\nimport errorHandler from \"@/request/errorHandler\";\nimport successHandler from \"@/request/successHandler\";\nimport storePersist from \"@/redux/storePersist\";\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\n\n\n\n\n\nexport const login = async (loginAdminData) => {\n  try {\n    const response = await axios.post(\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\n      loginAdminData\n    );\n    token.set(response.data.result.token);\n    return successHandler(response);\n  } catch (error) {\n    return errorHandler(error);\n  }\n};\n\nexport const logout = async () => {\n  const headersInstance = { [ACCESS_TOKEN_NAME]: getCookie(ACCESS_TOKEN_NAME) };\n  \n  const axiosInstance = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 30000,\n    headers: {\n      ...headersInstance,\n    },\n  }); \n  try {\n    await axiosInstance.post(\n      API_BASE_URL + \"logout\",\n      {}\n    );\n  } catch (error) {\n  }\n  token.remove();\n  storePersist.clear();\n  // redirect to login forcing a reload\n  window.location.href = \"/\"; \n};\n\nexport const token = {\n  get: () => {\n    return getCookie(ACCESS_TOKEN_NAME);\n  },\n  set: (token) => {\n    return setCookie(ACCESS_TOKEN_NAME, token);\n  },\n  remove: () => {\n    return deleteCookie(ACCESS_TOKEN_NAME);\n  },\n};\n","import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = (error, emptyResult = null) => {\n  const { response } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\",\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \",\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \",\n    };\n  }\n};\n\nexport default errorHandler;\n","import { notification } from \"antd\";\n\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = (response, typeNotification = {}) => {\n  if (!response.data.result) {\n    response = {\n      ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null,\n      },\n    };\n  }\n  const { data } = response;\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n  } else {\n    const message = data && data.message;\n    const successText = message || codeMessage[response.status];\n    const { status } = response;\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.success({\n    //   message: `Request success`,\n    //   description: successText,\n    // });\n  }\n\n  return data;\n};\n\nexport default successHandler;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authService from \"@/auth\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <motion.div\n            initial={{ x: 200 }}\n            animate={{ x: 0 }}\n            exit={{ scale: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst PageLoader = () => {\n  return (\n    <div className=\"center\">\n      <Spin size=\"large\" />\n    </div>\n  );\n};\nexport default PageLoader;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Login = lazy(() =>\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\n);\n\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nexport default function AuthRouter() {\n  const location = useLocation();\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PublicRoute\n            path=\"/\"\n            component={Login}\n            render={() => <Redirect to=\"/login\" />}\n          />\n          <PublicRoute component={Login} path=\"/login\" exact />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport * as authService from \"@/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    // const admin = useSelector(state => state);\n\n  const config = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 100,\n  };\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <motion.div\n            transition={config}\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -20, opacity: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Dashboard = lazy(() =>\n  import(/*webpackChunkName:'DashboardPage'*/ \"@/pages/Dashboard\")\n);\nconst Admin = lazy(() =>\n  import(/*webpackChunkName:'AdminPage'*/ \"@/pages/Admin\")\n);\n\nconst Customer = lazy(() =>\n  import(/*webpackChunkName:'CustomerPage'*/ \"@/pages/Customer\")\n);\n\nconst SelectCustomer = lazy(() =>\n  import(/*webpackChunkName:'SelectCustomerPage'*/ \"@/pages/SelectCustomer\")\n);\n\nconst Lead = lazy(() => import(/*webpackChunkName:'LeadPage'*/ \"@/pages/Lead\"));\nconst Product = lazy(() =>\n  import(/*webpackChunkName:'ProductPage'*/ \"@/pages/Product\")\n);\n\nconst Logout = lazy(() =>\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\n);\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nconst UploadFile = lazy(() =>\n  import(/*webpackChunkName:'Upl;oadFilePage'*/ \"@/pages/UploadFile\")\n);\n\nexport default function AppRouter() {\n  const location = useLocation();\n  console.log('AppRouter here location', location);\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PrivateRoute\n            path=\"/\"\n            component={UploadFile}\n            render={() => <Redirect to=\"/upload-file\" />}\n            exact\n          />\n          <PrivateRoute\n            path=\"/upload-file\"\n            component={UploadFile}\n            exact\n          />\n          <PrivateRoute component={Customer} path=\"/customer\" exact />\n          <PrivateRoute\n            component={SelectCustomer}\n            path=\"/selectcustomer\"\n            exact\n          />\n          <PrivateRoute component={Lead} path=\"/lead\" exact />\n          <PrivateRoute component={Product} path=\"/product\" exact />\n          <PrivateRoute component={Admin} path=\"/admin\" exact />\n\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport { logout } from \"../../auth/auth.service\";\nimport {\n  DashboardOutlined,\n  LogoutOutlined,\n  UserOutlined\n} from \"@ant-design/icons\";\nimport { useSelector, useStore } from \"react-redux\";\nimport { selectCurrentAdmin } from \"@/redux/auth/selectors\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Navigation() {\n  const [collapsed, setCollapsed] = useState(false);\n  const {isRootUser}  = useSelector(selectCurrentAdmin);\n   \n  const onCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n\n  const handleMenuClick = (e) => {\n    if (e.key === \"3\") {\n      logout();\n    }\n  };\n\n  return (\n    <>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        style={{\n          zIndex: 1000,\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\" onClick={handleMenuClick}>\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\n            <Link to=\"/upload-file\" />\n            Upload\n          </Menu.Item>\n         {isRootUser &&\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            <Link to=\"/admin\" />\n            User management\n          </Menu.Item>}\n          <Menu.Item key=\"3\" icon={<LogoutOutlined />}>\n              Logout\n          </Menu.Item>\n\n        </Menu>\n      </Sider>\n    </>\n  );\n}\nexport default Navigation;\n","// export { default as AuthRouter } from \"./AuthRouter\";\n// export { default as AppRouter } from \"./AppRouter\";\nimport React, { useEffect } from \"react\";\n\nimport AuthRouter from \"./AuthRouter\";\nimport AppRouter from \"./AppRouter\";\n\nimport { Layout } from \"antd\";\nimport Navigation from \"@/layout/Navigation\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectAuth } from \"@/redux/auth/selectors\";\n\nexport default function Router() {\n  const { isLoggedIn } = useSelector(selectAuth);\n\n  useEffect(() => {\n    console.log(\"isLoggedIn : \", isLoggedIn);\n  }, [isLoggedIn]);\n\n  if (isLoggedIn === false)\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <AuthRouter />\n      </Layout>\n    );\n  else\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navigation />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <AppRouter />\n        </Layout>\n      </Layout>\n    );\n}\n\n// export default App;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {\n  current: {},\n  loading: false,\n  isLoggedIn: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.FAILED_REQUEST:\n      return INITIAL_STATE;\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        current: action.payload,\n        loading: false,\n        isLoggedIn: true,\n      };\n    case actionTypes.LOGOUT_SUCCESS:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_KEY_STATE = {\n  result: null,\n  current: null,\n  isLoading: false,\n  isSuccess: false,\n};\n\nconst INITIAL_STATE = {\n  current: {\n    result: null,\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 1,\n      },\n    },\n    isLoading: false,\n    isSuccess: false,\n  },\n  create: INITIAL_KEY_STATE,\n  update: INITIAL_KEY_STATE,\n  delete: INITIAL_KEY_STATE,\n  read: INITIAL_KEY_STATE,\n  search: { ...INITIAL_KEY_STATE, result: [] },\n};\n\nconst crudReducer = (state = INITIAL_STATE, action) => {\n  const { payload, keyState } = action;\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n    case actionTypes.CURRENT_ITEM:\n      return {\n        ...state,\n        current: {\n          result: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: false,\n          isSuccess: false,\n        },\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          result: payload,\n          isLoading: false,\n          isSuccess: true,\n        },\n      };\n    case actionTypes.CURRENT_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_KEY_STATE,\n          current: payload,\n        },\n      };\n    case actionTypes.RESET_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_STATE[keyState],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\n\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\n\nexport const RESET_REF = \"SEARCH_RESET_REF\";\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false,\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  const { payload = null, keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.INIT_STATE: {\n      let newState = {};\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\n      return newState;\n    }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          selected: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from \"redux\";\n\nimport { reducer as authReducer } from \"./auth\";\nimport { reducer as crudReducer } from \"./crud\";\nimport { reducer as searchReducer } from \"./search\";\n\nimport * as actionTypes from \"./auth/types\";\n\n// Combine all reducers.\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  crud: crudReducer,\n  search: searchReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\n\nconst logger = createLogger();\nlet middleware = [thunk];\n\nlet configStore = applyMiddleware(...middleware);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\")\n  ? { auth: storePersist.get(\"auth\") }\n  : {};\n\nconst store = createStore(rootReducer, initialState, configStore);\n\nexport default store;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Router as RouterHistory } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Router from \"@/router\";\nimport history from \"@/utils/history\";\nimport store from \"@/redux/store\";\n\nimport { Button, Result } from \"antd\";\n\nimport useNetwork from \"@/hooks/useNetwork\";\n\nfunction App() {\n  const { isOnline: isNetwork } = useNetwork();\n\n  if (!isNetwork)\n    return (\n      <>\n        <Result\n          status=\"404\"\n          title=\"No Internet Connection\"\n          subTitle=\"Check your Internet Connection or your network.\"\n          extra={\n            <Button href=\"/\" type=\"primary\">\n              Try Again\n            </Button>\n          }\n        />\n      </>\n    );\n  else {\n    return (\n      <RouterHistory history={history}>\n        <Provider store={store}>\n          <Router />\n        </Provider>\n      </RouterHistory>\n    );\n  }\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function useNetwork() {\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\n  useEffect(() => {\n    setNetwork(window.navigator.onLine);\n  }, [window.navigator.onLine]);\n  return { isOnline };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n// import \"./index.css\";\nimport App from \"./app\"\nimport \"./style/app.less\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","console.log(\n  \"process env REACT_APP_DEV_REMOTE\",\n  process.env.REACT_APP_DEV_REMOTE\n)\n\nexport const BACKEND_BASE_URL = \nprocess.env.NODE_ENV == \"production\" ||\nprocess.env.REACT_APP_DEV_REMOTE == \"remote\"\n  ? \"https://backend-4jkdr.ondigitalocean.app/\"\n  : \"http://localhost:8888/\"\n\nexport const API_BASE_URL = BACKEND_BASE_URL + \"api/\";\n \n// export const API_BASE_URL = \"https://wild-puce-reindeer-sari.cyclic.app/api/\";\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\"\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\n\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\n\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\n\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\n\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\n","export const storePersist = {\n  set: (key, state) => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  },\n  get: (key) => {\n    const result = window.localStorage.getItem(key);\n    return JSON.parse(result);\n  },\n  remove: (key) => {\n    window.localStorage.removeItem(key);\n  },\n  getAll: () => {\n    return window.localStorage;\n  },\n  clear: () => {\n    window.localStorage.clear();\n  },\n};\n\nexport default storePersist;\n","const codeMessage = {\n  200: \"The server successfully returned the requested data. \",\n  201: \"Create or modify data successfully. \",\n  202: \"A request has entered the background queue (asynchronous task). \",\n  204: \"Delete data successfully. \",\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\n  401: \"The admin does not have permission please try to login again. \",\n  403: \"The admin is authorized, but access is forbidden. \",\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\n  406: \"The requested format is not available. \",\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\n  422: \"When creating an object, a validation error occurred. \",\n  500: \"An error occurred in the server, please check the server. \",\n  502: \"Gateway error. \",\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\n  504: \"The gateway has timed out. \",\n};\n\nexport default codeMessage;\n","export * from \"./auth.service\";\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n"],"sourceRoot":""}