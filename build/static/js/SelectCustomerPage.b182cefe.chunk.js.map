{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","utils/uinqueId.js","request/request.js","redux/auth/actions.js","components/Loading/index.jsx","utils/helpers.js","layout/DefaultLayout/index.jsx","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","forms/CustomerForm.jsx","utils/inverseColor.js","modules/CustomCrudModule/DataTable.jsx","modules/CustomCrudModule/CrudDataTable.jsx","modules/CustomCrudModule/index.jsx","pages/SelectCustomer.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","_objectSpread","Error","concat","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","_ref","children","useReducer","value","useMemo","_jsx","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","async","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","arguments","length","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","headersInstance","ACCESS_TOKEN_NAME","tokenCookies","get","axiosInstance","axios","baseURL","API_BASE_URL","timeout","headers","defaults","response","post","successHandler","error","errorHandler","id","patch","filter","equal","query","fields","question","cancelToken","token","entityUrl","CancelToken","login","loginAdminData","loading","authService","authValue","admin","isLoggedIn","storePersist","set","history","push","logout","Loading","isLoading","antIcon","LoadingOutlined","style","fontSize","spin","Spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","join","Object","byString","s","a","replace","i","n","k","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","_jsxs","Menu","Item","onClick","target","rel","href","className","padding","background","Dropdown","overlay","placement","arrow","Avatar","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","_ref2","isOpen","show","display","opacity","Row","Col","span","BottomCollapseBox","_ref3","CollapseBox","_ref4","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","width","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","styleSider","setStyleSider","useState","opacitySider","setOpacitySider","useEffect","setTimeout","trigger","MenuOutlined","collapsible","collapsedWidth","collapsePanel","zeroWidthTriggerStyle","right","top","left","collapsePanelBox","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","margin","maxWidth","DashboardLayout","CreateForm","formElements","isSuccess","useSelector","form","Form","useForm","resetFields","layout","onFinish","fieldsValue","birthday","format","date","Button","htmlType","UpdateForm","dayjs","setFieldsValue","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","Modal","visible","onOk","handleOk","onCancel","handleCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","AutoComplete","onSelect","onSearch","searchText","clearTimeout","currentValue","notFoundContent","Empty","allowClear","placeholder","Input","suffix","SearchOutlined","CustomerForm","isUpdateForm","_Fragment","name","rules","required","message","paddingRight","paddingLeft","inverseColor","hex","indexOf","slice","DataTable","DropDownRowMenu","AddNewItem","inputColorRef","selectedRowKeys","setSelectedRowKeys","tableItemsList","setTableItemsList","coloredRow","setColoredRow","openColorBox","click","handelColorChange","e","tmpObj","MakeNewColor","position","ref","dataTableColumns","dataTableTitle","newDataTableColumns","render","text","row","color","EllipsisOutlined","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","listIds","firstRow","setFirstRow","setSelect","rowSelection","onSelectChange","selectedKeys","selectedRows","hideSelectAll","columnWidth","renderCell","handelColorRow","checked","record","index","originNode","PageHeader","onBack","window","back","ghost","extra","Table","columns","rowKey","onRow","onClickRow","rowIndex","onMouseDown","onMouseEnter","selectedRange","onMouseUp","ellipsis","size","dataSource","handelClick","EyeOutlined","Show","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","FixHeaderPanel","marginBottom","panelTitle","addNewItem","block","PlusOutlined","CustomCrudModule","createForm","updateForm","useLayoutEffect","SelectCustomer","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/SelectCustomerPage.b182cefe.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    console.log(\"jsonData action redux\", jsonData);\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\n\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\n\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance,\n  },\n});\n\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(\n        entity + \"/update/\" + id,\n        jsonData\n      );\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token,\n      });\n\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async (entityUrl) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  console.log(\"LOGIN_DATA\",loginAdminData);\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uinqueId\";\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n\n  const menu = (\n    <Menu>\n      <Menu.Item key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n        logout\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"/\"\n        >\n          2nd menu item\n        </a>\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"/\"\n        >\n          3rd menu item\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header\n      className=\"site-layout-background\"\n      style={{ padding: 0, background: \"none\" }}\n    >\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-50px\",\n        top: \"15px\",\n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth: \"1100px\",\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          date: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React from \"react\";\nimport { Button, Form, Input } from \"antd\";\n\nexport default function CustomerForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"company Name\"\n        name=\"company\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your company name!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your surname!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your manager name!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingLeft: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","export default function inverseColor(hex) {\n  if (hex.indexOf(\"#\") === 0) {\n    hex = hex.slice(1);\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error(\"Invalid HEX color.\");\n  }\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16);\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#FFFFFF\";\n}\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Dropdown, Button, PageHeader, Table, Input } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\nimport inverseColor from \"@/utils/inverseColor\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  const inputColorRef = useRef(null);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [tableItemsList, setTableItemsList] = useState([]);\n  const [coloredRow, setColoredRow] = useState({});\n\n  const openColorBox = () => {\n    inputColorRef.current.click();\n  };\n  const handelColorChange = (e) => {\n    const tmpObj = {};\n    const tmpColoredRows = selectedRowKeys.map((x) => {\n      tmpObj[x] = e.target.value;\n    });\n\n    setColoredRow({ ...coloredRow, ...tmpObj });\n    setSelectedRowKeys([]);\n  };\n  function MakeNewColor() {\n    return (\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        <Button onClick={openColorBox}>Make new Color</Button>\n        <input\n          type=\"color\"\n          ref={inputColorRef}\n          onChange={handelColorChange}\n          style={{\n            opacity: 0,\n            position: \"absolute\",\n            left: 0,\n            top: \"10px\",\n            width: \"100%\",\n          }}\n        />\n      </div>\n    );\n  }\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  const newDataTableColumns = dataTableColumns.map((obj) => ({\n    ...obj,\n    render: (text, row) => {\n      return {\n        props: {\n          style: {\n            background: coloredRow[row._id] ? coloredRow[row._id] : \"\",\n            color: coloredRow[row._id] ? inverseColor(coloredRow[row._id]) : \"\",\n          },\n        },\n        children: text,\n      };\n    },\n  }));\n  dataTableColumns = [\n    ...newDataTableColumns,\n    {\n      title: \"\",\n      render: (row) => {\n        return {\n          props: {\n            style: {\n              background: coloredRow[row._id] ? coloredRow[row._id] : \"\",\n              color: coloredRow[row._id]\n                ? inverseColor(coloredRow[row._id])\n                : \"\",\n            },\n          },\n          children: (\n            <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n              <EllipsisOutlined\n                style={{ cursor: \"pointer\", fontSize: \"24px\" }}\n              />\n            </Dropdown>\n          ),\n        };\n      },\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } =\n    useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  useEffect(() => {\n    const listIds = items.map((x) => x._id);\n    setTableItemsList(listIds);\n  }, [items]);\n\n  const [firstRow, setFirstRow] = useState();\n\n  const [onSelect, setSelect] = useState(false);\n  const onClickRow = (record, rowIndex) => {\n    return {\n      onClick: () => {\n        // const exist = selectedRowKeys.includes(record._id);\n        // if (exist) {\n        //   let filtered = selectedRowKeys.filter(function (value) {\n        //     return value != record._id;\n        //   });\n        //   setSelectedRowKeys(filtered);\n        // } else {\n        //   setSelectedRowKeys([...selectedRowKeys, record._id]);\n        // }\n      },\n      onMouseDown: () => {\n        setFirstRow(rowIndex);\n        setSelectedRowKeys([record._id]);\n        setSelect(true);\n      },\n      onMouseEnter: () => {\n        if (onSelect) {\n          const selectedRange = tableItemsList.slice(firstRow, rowIndex + 1);\n          setSelectedRowKeys(selectedRange);\n        }\n      },\n      onMouseUp: () => {\n        setSelect(false);\n      },\n    };\n  };\n\n  const handelColorRow = (checked, record, index, originNode) => {\n    return {\n      props: {\n        style: {\n          background: coloredRow[record._id] ? coloredRow[record._id] : \"\",\n        },\n      },\n      // children: originNode,\n    };\n  };\n\n  const onSelectChange = (selectedKeys, selectedRows) => {\n    setSelectedRowKeys(selectedKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    hideSelectAll: true,\n    columnWidth: 0,\n\n    renderCell: handelColorRow,\n    selectedRowKeys: selectedRowKeys,\n  };\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <MakeNewColor key={`${uniqueId()}`} config={config} />,\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        rowSelection={rowSelection}\n        onRow={onClickRow}\n        ellipsis={true}\n        // rowClassName={setRowClassName}\n        size={\"small\"}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"./DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport CrudDataTable from \"./CrudDataTable\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default function CustomCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n","import React from \"react\";\n\nimport CustomCrudModule from \"@/modules/CustomCrudModule\";\nimport CustomerForm from \"@/forms/CustomerForm\";\n\nfunction SelectCustomer() {\n  const entity = \"client\";\n  const searchConfig = {\n    displayLabels: [\"company\", \"surname\", \"name\"],\n    searchFields: \"company,surname,name\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"SelectCustomer Panel\";\n  const dataTableTitle = \"Customers Lists\";\n  const entityDisplayLabels = [\"company\"];\n\n  const readColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n  ];\n\n  const ADD_NEW_ENTITY = \"Add new customer\";\n  const DATATABLE_TITLE = \"customers List\";\n  const ENTITY_NAME = \"customer\";\n  const CREATE_ENTITY = \"Create customer\";\n  const UPDATE_ENTITY = \"Update customer\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CustomCrudModule\n      createForm={<CustomerForm />}\n      updateForm={<CustomerForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n\nexport default SelectCustomer;\n"],"sourceRoot":""}